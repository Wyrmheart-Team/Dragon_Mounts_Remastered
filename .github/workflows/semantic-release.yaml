name: Run semantic release

on:
  workflow_call:
    inputs:
      dry-run:
        description: 'Run semantic release in dry-run mode'
        required: false
        default: false
        type: boolean
    outputs:
      new_release_published:
        description: 'Whether a new release was published'
        value: ${{ jobs.semantic-release.outputs.new_release_published }}
      new_release_version:
        description: 'The new release version'
        value: ${{ jobs.semantic-release.outputs.new_release_version }}
      changelog:
        description: 'The changelog value'
        value: ${{ jobs.semantic-release.outputs.changelog }}

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.release_description.outputs.description }}
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache npm dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Save updated npm cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Run Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
          dry_run: ${{ inputs.dry-run }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Generate Changelog Value
        id: release_description
        shell: bash
        run: |
          cat <<EOF > release_notes.txt
          ${{ steps.semantic.outputs.new_release_notes }}
          EOF
          description=$(sed ':a;N;$!ba; s/\r//g; s/\n/\\n/g; s/"/\\"/g; s/%/\\n/g' release_notes.txt)
          echo "description=$description" >> $GITHUB_OUTPUT

          # Output changelog as job summary
          echo "## Changelog for version ${{ steps.semantic.outputs.new_release_version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat release_notes.txt >> $GITHUB_STEP_SUMMARY

          rm release_notes.txt

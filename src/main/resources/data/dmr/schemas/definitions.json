{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "schemas/definitions.json",
  "$version": "1.0.0",
  "$comment": "This schema contains common type definitions used by other schemas in the Dragon Mounts Remastered mod. It is not meant to be used directly for validation, but rather referenced by other schemas using $ref.",
  "title": "Dragon Mounts Remastered Definitions",
  "description": "Common type definitions used across multiple schemas in the Dragon Mounts Remastered mod",
  "$defs": {
    "item": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "An item identifier, optionally namespaced",
      "custom_properties": {
        "type": "item"
      }
    },
    "block": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A block identifier, optionally namespaced",
      "custom_properties": {
        "type": "block"
      }
    },
    "fluid": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A fluid identifier, optionally namespaced",
      "custom_properties": {
        "type": "fluid"
      }
    },
    "sound": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A sound identifier, optionally namespaced",
      "custom_properties": {
        "type": "sound"
      }
    },
    "loot_table": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A loot table identifier, optionally namespaced",
      "custom_properties": {
        "type": "loot_table"
      }
    },
    "color": {
      "type": "string",
      "pattern": "^[0-9a-fA-F]{1,6}$",
      "description": "A color in hexadecimal format (without # prefix)",
      "custom_properties": {
        "type": "color"
      }
    },
    "texture": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A texture file path, optionally namespaced",
      "custom_properties": {
        "type": "texture_file"
      }
    },
    "block_tag": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A block tag identifier, optionally namespaced",
      "custom_properties": {
        "type": "block_tag"
      }
    },
    "fluid_tag": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A fluid tag identifier, optionally namespaced",
      "custom_properties": {
        "type": "fluid_tag"
      }
    },
    "item_tag": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "An item tag identifier, optionally namespaced",
      "custom_properties": {
        "type": "item_tag"
      }
    },
    "biome_tag": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A biome tag identifier, optionally namespaced",
      "custom_properties": {
        "type": "biome_tag"
      }
    },
    "effect": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A status effect identifier, optionally namespaced",
      "custom_properties": {
        "type": "effect"
      }
    },
    "particle": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A particle effect identifier, optionally namespaced",
      "custom_properties": {
        "type": "particle"
      }
    },
    "model": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "A model file path, optionally namespaced",
      "custom_properties": {
        "type": "json_file"
      }
    },
    "animation": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "An animation file path, optionally namespaced",
      "custom_properties": {
        "type": "json_file"
      }
    },
    "ability": {
      "type": "string",
      "pattern": "^#?[a-zA-Z0-9_]+$",
      "description": "A dragon ability identifier",
      "custom_properties": {
        "type": "ability"
      }
    },
    "ability_entry": {
      "type": "object",
      "description": "An entry defining a dragon ability with its chance of occurrence",
      "properties": {
        "ability": {
          "$ref": "definitions.json#/$defs/ability",
          "description": "The ability this entry refers to"
        },
        "chance": {
          "type": "number",
          "description": "The chance of a dragon getting this ability"
        }
      },
      "custom_properties": {
        "type": "ability_entry"
      }
    },
    "breath_type": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_/.]+$",
      "description": "A dragon breath type identifier",
      "custom_properties": {
        "type": "breath_type"
      }
    },
    "identifier": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_]+$",
      "description": "A simple identifier without namespace"
    },
    "loot_tables": {
      "type": "array",
      "description": "A collection of loot table entries with their drop chances and quantities",
      "items": {
        "type": "object",
        "description": "A loot table entry with drop chance and quantity range",
        "properties": {
          "table": {
            "$ref": "definitions.json#/$defs/loot_table",
            "description": "Loot table resource location"
          },
          "chance": {
            "type": "number",
            "description": "Chance of the item appearing in the loot table",
            "minimum": 0,
            "maximum": 1
          },
          "min": {
            "type": "integer",
            "description": "Minimum quantity of the item",
            "minimum": 1
          },
          "max": {
            "type": "integer",
            "description": "Maximum quantity of the item",
            "minimum": 1
          }
        },
        "required": ["table", "chance", "min", "max"]
      },
      "custom_properties": {
        "type": "loot_tables"
      }
    },
    "attribute": {
      "type": "string",
      "pattern": "^(?:[a-zA-Z0-9_]+:)?[a-zA-Z0-9_/.]+$",
      "description": "An attribute identifier, optionally namespaced",
      "custom_properties": {
        "type": "attribute"
      }
    },
    "duration_integer": {
      "type": "integer",
      "description": "An integer representing a duration in ticks (20 ticks = 1 second)",
      "minimum": 0,
      "custom_properties": {
        "type": "duration_integer"
      }
    },
    "attributes": {
      "type": "object",
      "description": "Map of attribute identifiers to their values",
      "propertyNames": {
        "$ref": "definitions.json#/$defs/attribute"
      },
      "additionalProperties": {
        "type": "number",
        "minimum": 0,
        "description": "Attribute value"
      },
      "custom_properties": {
        "type": "attributes"
      }
    },
    "simple_effect": {
      "type": "object",
      "description": "A simple effect that can be applied to entities. Uses user-friendly format.",
      "properties": {
        "id": {
          "$ref": "definitions.json#/$defs/effect",
          "description": "The status effect to apply."
        },
        "duration": {
          "$ref": "definitions.json#/$defs/duration_integer",
          "description": "Duration of the effect in ticks.",
          "default": 40
        },
        "amplifier": {
          "type": "integer",
          "description": "Amplifier level of the effect (0 = level 1).",
          "minimum": 0,
          "default": 0
        },
        "ambient": {
          "type": "boolean",
          "description": "Whether the effect is ambient (from a beacon).",
          "default": true
        },
        "show_particles": {
          "type": "boolean",
          "description": "Whether to show effect particles.",
          "default": false
        },
        "show_icon": {
          "type": "boolean",
          "description": "Whether to show the effect icon.",
          "default": true
        },
        "duration_scale_factor": {
          "type": "number",
          "description": "Factor by which the duration scales with ability tier.",
          "minimum": 0,
          "default": 1.0
        }
      },
      "required": ["id"]
    },
    "target_settings": {
      "type": "object",
      "description": "Settings for who should receive the effects/actions.",
      "properties": {
        "apply_to_dragon": {
          "type": "boolean",
          "description": "Whether to apply effects to the dragon itself.",
          "default": true
        },
        "apply_to_owner": {
          "type": "boolean",
          "description": "Whether to apply effects to the dragon's owner.",
          "default": false
        },
        "apply_to_target": {
          "type": "boolean",
          "description": "Whether to apply effects to the event target (if applicable).",
          "default": false
        }
      }
    },
    "action": {
      "type": "object",
      "description": "A single action that can be performed by an ability",
      "properties": {
        "targets": {
          "description": "List of target types for this action",
          "oneOf": [
            {
              "type": "string",
              "enum": ["dragon", "owner", "target", "monsters", "all_entities", "passengers"],
              "description": "Single target type"
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["dragon", "owner", "target", "monsters", "all_entities", "passengers"]
              },
              "description": "Multiple target types"
            }
          ],
          "default": ["dragon"]
        }
      },
      "allOf": [
        {
          "oneOf": [
            {
              "description": "Effect action: Apply a status effect",
              "allOf": [
                {
                  "$ref": "definitions.json#/$defs/simple_effect"
                },
                {
                  "properties": {
                    "effect": {
                      "description": "The status effect to apply"
                    }
                  },
                  "required": ["effect"]
                }
              ]
            },
            {
              "description": "Attribute action: Modify an entity attribute",
              "properties": {
                "attribute": {
                  "oneOf": [
                    {
                      "type": "string",
                      "$ref": "definitions.json#/$defs/attribute",
                      "description": "Simple attribute format"
                    },
                    {
                      "type": "object",
                      "description": "Complex attribute format",
                      "properties": {
                        "id": {
                          "$ref": "definitions.json#/$defs/attribute",
                          "description": "The attribute to modify"
                        },
                        "value": {
                          "type": "number",
                          "description": "The value to apply"
                        },
                        "operation": {
                          "type": "string",
                          "enum": ["ADD_VALUE", "ADD_MULTIPLIED_BASE", "ADD_MULTIPLIED_TOTAL"],
                          "description": "How to apply the attribute modifier",
                          "default": "ADD_VALUE"
                        }
                      },
                      "required": ["id", "value"]
                    }
                  ]
                },
                "attribute_value": {
                  "type": "number",
                  "description": "Value for simple attribute format",
                  "default": 1.0
                },
                "attribute_operation": {
                  "type": "string",
                  "enum": ["ADD_VALUE", "ADD_MULTIPLIED_BASE", "ADD_MULTIPLIED_TOTAL"],
                  "description": "Operation for simple attribute format",
                  "default": "ADD_VALUE"
                },
                "attribute_scale_factor": {
                  "type": "number",
                  "description": "Factor by which the value scales with ability tier",
                  "minimum": 0,
                  "default": 1.0
                },
                "permanent": {
                  "type": "boolean",
                  "description": "Whether this attribute modifier should be permanent (not removed when conditions change)",
                  "default": false
                }
              },
              "required": ["attribute"]
            },
            {
              "description": "Heal action: Restore health",
              "properties": {
                "heal": {
                  "type": "number",
                  "description": "Amount of health to restore",
                  "minimum": 0
                },
                "heal_scale_factor": {
                  "type": "number",
                  "description": "Factor by which healing scales with ability tier",
                  "minimum": 0,
                  "default": 1.0
                }
              },
              "required": ["heal"]
            },
            {
              "description": "Damage action: Deal damage",
              "properties": {
                "damage": {
                  "type": "number",
                  "description": "Amount of damage to deal",
                  "minimum": 0
                },
                "damage_scale_factor": {
                  "type": "number",
                  "description": "Factor by which damage scales with ability tier",
                  "minimum": 0,
                  "default": 1.0
                }
              },
              "required": ["damage"]
            },
            {
              "description": "Give item action: Give an item to players",
              "properties": {
                "give_item": {
                  "oneOf": [
                    {
                      "type": "string",
                      "$ref": "definitions.json#/$defs/item",
                      "description": "Simple item format"
                    },
                    {
                      "type": "object",
                      "description": "Complex item format",
                      "properties": {
                        "item": {
                          "$ref": "definitions.json#/$defs/item",
                          "description": "The item to give"
                        },
                        "count": {
                          "type": "integer",
                          "description": "Number of items to give",
                          "minimum": 1,
                          "default": 1
                        }
                      },
                      "required": ["item"]
                    }
                  ]
                },
                "item_count": {
                  "type": "integer",
                  "description": "Count for simple item format",
                  "minimum": 1,
                  "default": 1
                },
                "item_scale_factor": {
                  "type": "number",
                  "description": "Factor by which item count scales with ability tier",
                  "minimum": 0,
                  "default": 1.0
                }
              },
              "required": ["give_item"]
            }
          ]
        }
      ]
    },
    "actions_array": {
      "type": "array",
      "description": "Array of actions to perform when this ability triggers",
      "items": {
        "$ref": "definitions.json#/$defs/action"
      },
      "minItems": 1
    },
    "action_examples": {
      "description": "Examples of different action types for abilities. Use the top-level actions array format.",
      "oneOf": [
        {
          "description": "Single effect example: Give speed effect to dragon",
          "example": {
            "ability_type": "passive",
            "actions": [
              {
                "effect": "minecraft:speed",
                "duration": 200,
                "amplifier": 1,
                "targets": ["dragon"]
              }
            ]
          }
        },
        {
          "description": "Multiple actions example: Give effect and item",
          "example": {
            "ability_type": "conditional_effect",
            "properties": {
              "condition_type": "in_water"
            },
            "actions": [
              {
                "effect": "minecraft:speed",
                "duration": 200,
                "targets": ["dragon"]
              },
              {
                "give_item": "minecraft:feather",
                "item_count": 3,
                "targets": ["owner"]
              }
            ]
          }
        },
        {
          "description": "Permanent attribute example: Increase max health",
          "example": {
            "ability_type": "permanent",
            "actions": [
              {
                "attribute": {
                  "id": "minecraft:generic.max_health",
                  "value": 20,
                  "operation": "ADD_VALUE"
                },
                "targets": ["dragon"]
              }
            ]
          }
        },
        {
          "description": "Healing ability example: Regenerate health",
          "example": {
            "ability_type": "passive",
            "properties": {
              "tick_interval": 40
            },
            "actions": [
              {
                "heal": 1.0,
                "heal_scale_factor": 1.5,
                "targets": ["dragon"]
              }
            ]
          }
        }
      ]
    }
  }
}
